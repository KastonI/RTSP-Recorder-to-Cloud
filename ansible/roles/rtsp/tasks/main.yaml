---

- name: Install Docker and Docker-compose
  apt:
    name:
      - docker.io
      - docker-compose
    state: present
    update_cache: yes

- name: Ensure Docker service is started and enable 
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Create a directory for storing files and logs
  file:
    path: "/home/{{ ANSIBLE_USER }}/app"
    state: directory
    owner: "{{ ANSIBLE_USER }}"
    group: "{{ ANSIBLE_USER }}"
    mode: '0755'

- name: Copy SSH key from pipeline
  copy:
    src: /home/runner/.ssh/ssh_private_key
    dest: /home/{{ ANSIBLE_USER }}/.ssh/ssh_private_key
    mode: '0600'

- name: Clone the GitHub repository with source code
  git:
    repo: "git@github.com:KastonI/final-project-src.git"
    dest: "/home/{{ ANSIBLE_USER }}/app"
    version: master
    key_file: "/home/{{ ANSIBLE_USER }}/.ssh/ssh_private_key"
    force: yes
    accept_hostkey: yes
    depth: 1

- name: Deploy temploy config.json with RTSP stream
  template:
    src: templates/config.json.j2
    dest: /home/{{ ANSIBLE_USER }}/app/config.json
    owner: "{{ ANSIBLE_USER }}"
    group: "{{ ANSIBLE_USER }}"
    mode: '0644'
  vars:
    RTSP_URL_1: "{{ lookup('env', 'RTSP_URL_1') }}"
    RTSP_URL_2: "{{ lookup('env', 'RTSP_URL_2') }}"

- name: Generate .env file for Docker
  template:
    src: env.j2
    dest: "/home/{{ ANSIBLE_USER }}/app/.env"
    owner: "{{ ANSIBLE_USER }}"
    mode: '0644'

- name: Stop Docker Compose if it is running
  shell: |
    docker-compose down --rmi all --volumes --remove-orphans
  args:
    chdir: /home/{{ ANSIBLE_USER }}/app

- name: Deploy Docker Compose file
  shell: |
    docker-compose up --build -d
  args:
    chdir: /home/{{ ANSIBLE_USER }}/app