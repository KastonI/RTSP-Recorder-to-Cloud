name: Ansible-Deploy
on:
  push:
    branches:
      - master
    paths:
      - 'ansible/**'  # Run only when there was a push in ansible/
  workflow_dispatch:
  workflow_run:
    workflows: ["Terraform-deploy"] 
    types:
      - completed
  repository_dispatch:  # Trigger from src repository 
    types: [push-to-src-repo]


jobs:
  ansible:
    name: Ansible Deploy
    runs-on: ubuntu-latest    

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      
      - name: Install Python dependencies
        run: |
          sudo apt update && sudo apt install -y python3-pip python3-venv
          pip install --upgrade pip
          pip install ansible boto3 botocore

      - name: Debug AWS Access
        run: |
          aws sts get-caller-identity
          echo "AWS_REGION: $AWS_REGION"

      - name: Check if hosts exist in dynamic inventory
        run: |
          INVENTORY_OUTPUT=$(ansible-inventory -i ansible/aws_ec2.yaml --list | jq '{_meta: {_hostvars: ._meta.hostvars | map_values({public_ip: .public_ip_address, private_ip: .private_ip_address, role: .tags.role})}, all: .all}')
          echo "Filtered Inventory Output: $INVENTORY_OUTPUT"
          if [[ $(echo "$INVENTORY_OUTPUT" | jq '._meta._hostvars | length') -eq 0 ]]; then
            echo "❌ No hosts available in inventory. Stopping pipeline."
            exit 1
          fi
        

      - name: Setup SSH Key for Ansible
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /home/runner/.ssh/ssh_private_key
          chmod 600 /home/runner/.ssh/*
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts

      - name: Run Ansible Playbook
        working-directory: ./ansible
        run: |
          chmod 644 ansible.cfg
          ansible-playbook playbook.yaml --private-key /home/runner/.ssh/ssh_private_key -u ${{ vars.ANSIBLE_USER }} \
          -e "RTSP_URL_1=${{ secrets.RTSP_URL_1 }}" \
          -e "RTSP_URL_2=${{ secrets.RTSP_URL_2 }}" \
          -e "S3_BUCKET_NAME=${{ vars.S3_BUCKET_NAME }}" \
          -e "TZ=${{ vars.TZ }}" \
          -e "AWS_REGION=${{ vars.AWS_REGION }}" \
          -e "NUM_CAMERAS=${{ vars.NUM_CAMERAS }}" \
          -e "MAX_BUFFER_SIZE=${{ vars.MAX_BUFFER_SIZE }}" \
          -e "RECORD_DURATION=${{ vars.RECORD_DURATION }}" \
          -e "ANSIBLE_USER=${{ vars.ANSIBLE_USER }}"